[{"/home/tecorb/Documents/React_qraphql/src/index.js":"1","/home/tecorb/Documents/React_qraphql/src/App.js":"2","/home/tecorb/Documents/React_qraphql/src/component/Auth/SignIn.js":"3","/home/tecorb/Documents/React_qraphql/src/component/Auth/profile.js":"4","/home/tecorb/Documents/React_qraphql/src/component/user/userList.js":"5","/home/tecorb/Documents/React_qraphql/src/graphql/Mutation.js":"6","/home/tecorb/Documents/React_qraphql/src/graphql/Query.js":"7","/home/tecorb/Documents/React_qraphql/src/helper/validation.js":"8"},{"size":1067,"mtime":1683268661105,"results":"9","hashOfConfig":"10"},{"size":1525,"mtime":1685361826481,"results":"11","hashOfConfig":"10"},{"size":5382,"mtime":1684913824193,"results":"12","hashOfConfig":"10"},{"size":4925,"mtime":1684922638616,"results":"13","hashOfConfig":"10"},{"size":3805,"mtime":1685362009596,"results":"14","hashOfConfig":"10"},{"size":519,"mtime":1684921692127,"results":"15","hashOfConfig":"10"},{"size":331,"mtime":1684912977652,"results":"16","hashOfConfig":"10"},{"size":226,"mtime":1683530938208,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1d4xdg2",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/tecorb/Documents/React_qraphql/src/index.js",[],[],"/home/tecorb/Documents/React_qraphql/src/App.js",["47","48","49","50"],[],"import logo from './logo.svg';\nimport './App.css';\n// import { Routes, Route } from \"react-router-dom\"\nimport Login from './component/Auth/SignIn';\nimport Profile from './component/Auth/profile';\nimport { BrowserRouter, Link, Route, Routes} from 'react-router-dom';\nimport UserList from './component/user/userList';\nimport { ApolloClient, ApolloProvider, HttpLink, InMemoryCache, from } from '@apollo/client';\nimport { onError} from '@apollo/client/link/error'\nimport { setContext } from '@apollo/client/link/context';\n\nconst errorLink = onError(({\n  graphqlErrors,networkError}) =>{\n    if(graphqlErrors) {\n      graphqlErrors.map(({message,location,path}) =>{\n        alert(`Graphql erro ${message}`)\n      })\n    }\n  })\n  // const authLink = setContext((_, { headers }) => {\n  //   const token = localStorage.getItem(token);\n  //   return {\n  //     headers: {\n  //       ...headers,\n  //       authorization: token ?token : ''\n  //     }\n  //   };\n  // });\nconst link = from([\n  errorLink,\n  new HttpLink({uri:\"https://node-graphql-five.vercel.app/graphql\"})\n])\n\nconst client = new ApolloClient({\n  cache:new InMemoryCache(),\n  link:link\n})\n\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <BrowserRouter>\n        <Routes>\n          <Route exact path=\"/\" element={<Login />} />\n          <Route exact path=\"/profile\" element={<Profile />} />\n          <Route exact path='/userList' element={<UserList/>}/>\n        </Routes>\n      </BrowserRouter>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n",[],"/home/tecorb/Documents/React_qraphql/src/component/Auth/SignIn.js",["51","52","53","54","55","56","57","58","59","60"],[],"import react, { useEffect, useState } from \"react\";\nimport axios from 'axios'\nimport { useNavigate } from \"react-router-dom\";\nimport ReactDOM from \"react-dom/client\";\nimport { Not_allowedSpace } from \"../../helper/validation\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport {signIn} from \"../../graphql/Mutation\";\n\nconst Login = () => {\n    const [loginVendor, { error1 }] = useMutation(signIn)\n    console.log(error1,\"slsl\")\n    const navigate = useNavigate()\n    const [password, setPassword] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [emailErr, setemailErr] = useState(false);\n    const [emailErr1, setemailErr1] = useState(false);\n    const [passwordErr, setpassowrdErr] = useState(false);\n    const [passwordErr1, setpassowrdErr1] = useState(false);\n    const email1 = (e) => {\n        setemailErr1(false)\n        e.preventDefault();\n        //not for allow space\n        Not_allowedSpace(e)\n        setEmail(e.target.value);\n        let regEmail = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        if (!regEmail.test(e.target.value)) {\n            setemailErr(true)\n        } else {\n            setemailErr(false)\n        }\n    }\n    const password1 = (e) => {\n        setpassowrdErr1(false);\n        e.preventDefault();\n        //not for allow space\n        Not_allowedSpace(e)\n        setPassword(e.target.value);\n    }\n    const login = async (e) => {\n        e.preventDefault()\n        try {\n            if (!email) {\n                setemailErr1(true)\n            } else if (!password) {\n                setpassowrdErr1(true)\n            } else {\n                //graphql mutation variable\n                const res = await loginVendor({\n                    variables: {\n                        loginInput: {\n                            email: email,\n                            password: password\n                        }\n                    }\n                });\n                if (res.data.loginVendor.code == 200) {\n                    localStorage.setItem('token', res.data.loginVendor.vendor.token);\n                    navigate('/userList')\n                } \n            }\n        } catch (err) {\n            alert(err)\n        }\n       \n    }\n\n    return (\n        <>\n            <div class=\"row\">\n                <div class=\"col-lg-6\">\n                    <div class=\"loginPageiImg_Container\">\n                        <img src=\"/Auth_Image/signupimage2.png\" />\n                    </div>\n                </div>\n                <div class=\"col-lg-6\">\n                    <div class=\"loginscreen animated fadeInDown loginPage\">\n                        <h2 class=\"text-center\">Welcome Admin</h2>\n                        <div class=\"form-group position-relative\">\n                            {emailErr ? <span className=\"position-absolute text-danger\" style={{ top: \"-25px\", left: \"10px\" }}>Please Enter Valid Email</span> : \"\"}\n                            {emailErr1 ? <span className=\"position-absolute text-danger\" style={{ top: \"-25px\", left: \"10px\" }}>Please Enter Email</span> : \"\"}\n\n                            <input type=\"email\" class=\"form-control\" placeholder=\"Enter Email\" id=\"email\" name=\"email\" value={email} onChange={(e) => email1(e)} />\n                        </div>\n                        <div class=\"form-group position-relative\">\n                            {/* {passwordErr ? <span className=\"position-absolute text-danger\" style={{ top: \"-25px\", left: \"10px\" }}>Please Enter Valid Password</span> : \"\"} */}\n                            {passwordErr1 ? <span className=\"position-absolute text-danger\" style={{ top: \"-25px\", left: \"10px\" }}>Please Enter Password</span> : \"\"}\n                            <input type=\"password\" class=\"form-control\" placeholder=\"Enter Password\" id=\"password\" name=\"password\" value={password} onChange={(e) => password1(e)} />\n                        </div>\n                        <button disabled={emailErr || passwordErr} class=\"btn block full-width m-b\" id=\"btnId\" onClick={(e) => login(e)} >\n                            Signin\n                        </button>\n                    </div>\n                </div>\n            </div>\n\n            {/* <form className=\"w-50 m-auto\">\n                <div class=\"form-group\">\n                    <label for=\"exampleInputEmail1\">Email</label>\n                    <input type=\"email\" class=\"form-control\" id=\"email\" value={email} onChange={(e) => handleInputChange(e)} aria-describedby=\"emailHelp\" placeholder=\"Enter email\" />\n                    <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"exampleInputPassword1\">Password</label>\n                    <input type=\"password\" class=\"form-control\" id=\"password\" value={password} onChange={(e) => handleInputChange(e)} placeholder=\"Password\" />\n                </div>\n                <button onClick={() => handleSubmit()} type=\"button\" class=\"btn btn-primary\">Submit</button>\n            </form> */}\n        </>\n    )\n}\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n// root.render(<Login />);\n// ReactDOM.render(<Login />, document.getElementById('root'));\n\nexport default Login;",[],"/home/tecorb/Documents/React_qraphql/src/component/Auth/profile.js",["61","62","63","64","65","66","67"],[],"import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\n// import { NextRequest,NextResponse } from \"next/server\";\n// import Cookies from 'cookies'\n// import cookieCutter from 'cookie-cutter'\n// import { getCookie } from 'cookies-next'\nimport { toast, ToastContainer } from 'react-toastify';\nimport { Not_allowedSpace } from \"../../helper/validation\";\nimport { editProfile } from \"../../graphql/Mutation\";\nimport { useMutation, useQuery } from \"@apollo/client\";\n\nconst Profile = () => {\n    const [edit, { error1 }] = useMutation(editProfile)\n\n    const navigate = useNavigate();\n    const [name, setName] = useState(\"\");\n    const [vendorId, setvendorId] = useState('');\n    const [phoneNumber, setphoneNumber] = useState(Number);\n    const [nameErr, setNameErr] = useState(false)\n    const [nameErrLength, setNameErrLength] = useState(false)\n    const [phoneErr, setPhoneErr] = useState(false)\n    const [phoneErr1, setPhoneErr1] = useState(false)\n\n    useEffect(() => {\n        setName(localStorage.getItem('name'));\n        setphoneNumber(localStorage.getItem('phoneNumber'));\n        setvendorId(localStorage.getItem('vendorId'))\n    }, []);\n\n    const handleInputChange = (e) => {\n        const { id, value } = e.target;\n        if (id === \"name\") {\n            setNameErr(false)\n            if (value.length < 3) {\n                setNameErrLength(true)\n                setName(value);\n            } else {\n                setNameErrLength(false)\n                setName(value);\n            }\n\n        }\n    }\n    var phoneNumber1 = (e) => {\n        const { id, value } = e.target;\n        if (id === \"phoneNumber\") {\n            setPhoneErr(false)\n            if (value.length < 10) {\n                setPhoneErr(true)\n                setphoneNumber(value);\n            } else {\n                setPhoneErr(false)\n                setphoneNumber(value);\n            }\n\n        }\n    }\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setNameErrLength(false)\n        try {\n            if (!name) {\n                setNameErr(true)\n            } else {\n                //graphql mutation variable\n                const res = await edit({\n                    variables: {\n                        id: vendorId,\n                        vendorInput: {\n                            phoneNumber: Number(phoneNumber),\n                            name: name\n                        }\n                    }\n                });\n                if (res.data.editVendor == true) {\n                    navigate('/userList')\n                }\n\n            }\n        } catch (err) {\n            alert(err)\n        }\n    }\n    const logout = ()=>{\n        localStorage.clear();\n        navigate('/')\n    }\n    return (\n        <>\n            <div class=\"row\">\n            <div style={{paddingLeft:\"1750px\"}}>\n                    <button style={{backgroundColor:\"red\"}} onClick={() => logout()} id=\"button\">Logout</button>\n                </div>\n                <div class=\"col-lg-6\">\n                    <div class=\"loginscreen animated fadeInDown loginPage\">\n                        <div class=\"form-group position-relative\">\n                            <label for=\"exampleInputPassword1\">PhoneNumber</label>\n                            {phoneErr ? <span className=\"position-absolute text-danger\" style={{ top: \"-25px\", left: \"10px\" }}>Please Enter Valid PhoneNumber</span> : \"\"}\n                            {phoneErr1 ? <span className=\"position-absolute text-danger\" style={{ top: \"-25px\", left: \"10px\" }}>Please Enter PhoneNumber</span> : \"\"}\n                            <input type=\"phoneNumber\" class=\"form-control\" placeholder=\"Enter PhoneNumber\" id=\"phoneNumber\" name=\"phoneNumber\" value={phoneNumber} onChange={(e) => phoneNumber1(e)} />\n                        </div>\n                        <div class=\"form-group position-relative\">\n                            <label for=\"exampleInputPassword1\">Name</label>\n                            {nameErrLength ? <span className=\"position-absolute text-danger\" style={{ top: \"-25px\", left: \"10px\" }}>Name length must be at least 3 characters long\" </span> : \"\"}\n                            {nameErr ? <span className=\"position-absolute text-danger\" style={{ top: \"-25px\", left: \"10px\" }}>Please Enter Name</span> : \"\"}\n                            <input type=\"name\" class=\"form-control\" placeholder=\"Enter Name\" id=\"name\" name=\"name\" value={name.trimStart()} onChange={(e) => handleInputChange(e)} />\n                        </div>\n                        <button disabled={nameErrLength || phoneErr} class=\"btn block full-width m-b\" id=\"btnId\" onClick={(e) => handleSubmit(e)} >\n                            Submit\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <ToastContainer />\n        </>\n    )\n}\nexport default Profile\n","/home/tecorb/Documents/React_qraphql/src/component/user/userList.js",["68","69","70","71","72","73","74"],[],"/home/tecorb/Documents/React_qraphql/src/graphql/Mutation.js",[],[],"/home/tecorb/Documents/React_qraphql/src/graphql/Query.js",[],[],"/home/tecorb/Documents/React_qraphql/src/helper/validation.js",[],[],{"ruleId":"75","severity":1,"message":"76","line":1,"column":8,"nodeType":"77","messageId":"78","endLine":1,"endColumn":12},{"ruleId":"75","severity":1,"message":"79","line":6,"column":25,"nodeType":"77","messageId":"78","endLine":6,"endColumn":29},{"ruleId":"75","severity":1,"message":"80","line":10,"column":10,"nodeType":"77","messageId":"78","endLine":10,"endColumn":20},{"ruleId":"81","severity":1,"message":"82","line":15,"column":51,"nodeType":"83","messageId":"84","endLine":15,"endColumn":53},{"ruleId":"75","severity":1,"message":"85","line":1,"column":8,"nodeType":"77","messageId":"78","endLine":1,"endColumn":13},{"ruleId":"75","severity":1,"message":"86","line":1,"column":17,"nodeType":"77","messageId":"78","endLine":1,"endColumn":26},{"ruleId":"75","severity":1,"message":"87","line":2,"column":8,"nodeType":"77","messageId":"78","endLine":2,"endColumn":13},{"ruleId":"75","severity":1,"message":"88","line":4,"column":8,"nodeType":"77","messageId":"78","endLine":4,"endColumn":16},{"ruleId":"75","severity":1,"message":"89","line":6,"column":23,"nodeType":"77","messageId":"78","endLine":6,"endColumn":31},{"ruleId":"75","severity":1,"message":"90","line":17,"column":25,"nodeType":"77","messageId":"78","endLine":17,"endColumn":39},{"ruleId":"91","severity":1,"message":"92","line":25,"column":34,"nodeType":"93","messageId":"94","endLine":25,"endColumn":35,"suggestions":"95"},{"ruleId":"91","severity":1,"message":"92","line":25,"column":59,"nodeType":"93","messageId":"94","endLine":25,"endColumn":60,"suggestions":"96"},{"ruleId":"97","severity":1,"message":"98","line":56,"column":47,"nodeType":"99","messageId":"100","endLine":56,"endColumn":49},{"ruleId":"101","severity":1,"message":"102","line":72,"column":25,"nodeType":"103","endLine":72,"endColumn":67},{"ruleId":"75","severity":1,"message":"87","line":1,"column":8,"nodeType":"77","messageId":"78","endLine":1,"endColumn":13},{"ruleId":"75","severity":1,"message":"104","line":9,"column":10,"nodeType":"77","messageId":"78","endLine":9,"endColumn":15},{"ruleId":"75","severity":1,"message":"105","line":10,"column":10,"nodeType":"77","messageId":"78","endLine":10,"endColumn":26},{"ruleId":"75","severity":1,"message":"89","line":12,"column":23,"nodeType":"77","messageId":"78","endLine":12,"endColumn":31},{"ruleId":"75","severity":1,"message":"106","line":15,"column":20,"nodeType":"77","messageId":"78","endLine":15,"endColumn":26},{"ruleId":"75","severity":1,"message":"107","line":24,"column":23,"nodeType":"77","messageId":"78","endLine":24,"endColumn":35},{"ruleId":"97","severity":1,"message":"98","line":77,"column":41,"nodeType":"99","messageId":"100","endLine":77,"endColumn":43},{"ruleId":"75","severity":1,"message":"108","line":2,"column":8,"nodeType":"77","messageId":"78","endLine":2,"endColumn":14},{"ruleId":"75","severity":1,"message":"88","line":3,"column":8,"nodeType":"77","messageId":"78","endLine":3,"endColumn":16},{"ruleId":"75","severity":1,"message":"109","line":5,"column":8,"nodeType":"77","messageId":"78","endLine":5,"endColumn":22},{"ruleId":"75","severity":1,"message":"110","line":7,"column":8,"nodeType":"77","messageId":"78","endLine":7,"endColumn":21},{"ruleId":"75","severity":1,"message":"104","line":9,"column":10,"nodeType":"77","messageId":"78","endLine":9,"endColumn":15},{"ruleId":"97","severity":1,"message":"98","line":55,"column":44,"nodeType":"99","messageId":"100","endLine":55,"endColumn":46},{"ruleId":"111","severity":1,"message":"112","line":65,"column":8,"nodeType":"113","endLine":65,"endColumn":10,"suggestions":"114"},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'setContext' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'react' is defined but never used.","'useEffect' is defined but never used.","'axios' is defined but never used.","'ReactDOM' is defined but never used.","'useQuery' is defined but never used.","'setpassowrdErr' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["115","116"],["117","118"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'toast' is defined but never used.","'Not_allowedSpace' is defined but never used.","'error1' is assigned a value but never used.","'setPhoneErr1' is assigned a value but never used.","'moment' is defined but never used.","'InfiniteScroll' is defined but never used.","'ReactPaginate' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchUser'. Either include it or remove the dependency array.","ArrayExpression",["119"],{"messageId":"120","fix":"121","desc":"122"},{"messageId":"123","fix":"124","desc":"125"},{"messageId":"120","fix":"126","desc":"122"},{"messageId":"123","fix":"127","desc":"125"},{"desc":"128","fix":"129"},"removeEscape",{"range":"130","text":"131"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"132","text":"133"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"134","text":"131"},{"range":"135","text":"133"},"Update the dependencies array to be: [fetchUser]",{"range":"136","text":"137"},[1008,1009],"",[1008,1008],"\\",[1033,1034],[1033,1033],[1841,1843],"[fetchUser]"]