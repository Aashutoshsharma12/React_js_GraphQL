{"ast":null,"code":"var _jsxFileName = \"/home/tecorb/Documents/REACT PROJECT/src/App.js\";\nimport logo from './logo.svg';\nimport './App.css';\n// import { Routes, Route } from \"react-router-dom\"\nimport Login from './component/Auth/SignIn';\nimport Profile from './component/Auth/profile';\nimport { BrowserRouter, Link, Route, Routes } from 'react-router-dom';\nimport UserList from './component/user/userList';\nimport { ApolloClient, HttpLink, InMemoryCache } from '@apollo/client';\nimport { onError } from '@apollo/client/link/error';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst errorLink = onError(_ref => {\n  let {\n    graphqlErrors,\n    networkError\n  } = _ref;\n  if (graphqlErrors) {\n    graphqlErrors.map(_ref2 => {\n      let {\n        message,\n        location,\n        path\n      } = _ref2;\n      alert(`Graphql erro ${message}`);\n    });\n  }\n});\nconst link = from([errorLink, new HttpLink({\n  uri: \"http://localhost:5000/graphql\"\n})]);\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: link\n});\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/profile\",\n          element: /*#__PURE__*/_jsxDEV(Profile, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/userList\",\n          element: /*#__PURE__*/_jsxDEV(UserList, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","Login","Profile","BrowserRouter","Link","Route","Routes","UserList","ApolloClient","HttpLink","InMemoryCache","onError","jsxDEV","_jsxDEV","Fragment","_Fragment","errorLink","_ref","graphqlErrors","networkError","map","_ref2","message","location","path","alert","link","from","uri","client","cache","App","children","exact","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/tecorb/Documents/REACT PROJECT/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\n// import { Routes, Route } from \"react-router-dom\"\nimport Login from './component/Auth/SignIn';\nimport Profile from './component/Auth/profile';\nimport { BrowserRouter, Link, Route, Routes} from 'react-router-dom';\nimport UserList from './component/user/userList';\nimport { ApolloClient, HttpLink, InMemoryCache } from '@apollo/client';\nimport { onError} from '@apollo/client/link/error'\nconst errorLink = onError(({\n  graphqlErrors,networkError}) =>{\n    if(graphqlErrors) {\n      graphqlErrors.map(({message,location,path}) =>{\n        alert(`Graphql erro ${message}`)\n      })\n    }\n  })\nconst link = from([\n  errorLink,\n  new HttpLink({uri:\"http://localhost:5000/graphql\"})\n])\n\nconst client = new ApolloClient({\n  cache:new InMemoryCache(),\n  link:link\n})\n\n\nfunction App() {\n  return (\n    <>\n      <BrowserRouter>\n        <Routes>\n          <Route exact path=\"/\" element={<Login />} />\n          <Route exact path=\"/profile\" element={<Profile />} />\n          <Route exact path='/userList' element={<UserList/>}/>\n        </Routes>\n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB;AACA,OAAOC,KAAK,MAAM,yBAAyB;AAC3C,OAAOC,OAAO,MAAM,0BAA0B;AAC9C,SAASC,aAAa,EAAEC,IAAI,EAAEC,KAAK,EAAEC,MAAM,QAAO,kBAAkB;AACpE,OAAOC,QAAQ,MAAM,2BAA2B;AAChD,SAASC,YAAY,EAAEC,QAAQ,EAAEC,aAAa,QAAQ,gBAAgB;AACtE,SAASC,OAAO,QAAO,2BAA2B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAClD,MAAMC,SAAS,GAAGL,OAAO,CAACM,IAAA,IACO;EAAA,IADN;IACzBC,aAAa;IAACC;EAAY,CAAC,GAAAF,IAAA;EACzB,IAAGC,aAAa,EAAE;IAChBA,aAAa,CAACE,GAAG,CAACC,KAAA,IAA4B;MAAA,IAA3B;QAACC,OAAO;QAACC,QAAQ;QAACC;MAAI,CAAC,GAAAH,KAAA;MACxCI,KAAK,CAAE,gBAAeH,OAAQ,EAAC,CAAC;IAClC,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AACJ,MAAMI,IAAI,GAAGC,IAAI,CAAC,CAChBX,SAAS,EACT,IAAIP,QAAQ,CAAC;EAACmB,GAAG,EAAC;AAA+B,CAAC,CAAC,CACpD,CAAC;AAEF,MAAMC,MAAM,GAAG,IAAIrB,YAAY,CAAC;EAC9BsB,KAAK,EAAC,IAAIpB,aAAa,CAAC,CAAC;EACzBgB,IAAI,EAACA;AACP,CAAC,CAAC;AAGF,SAASK,GAAGA,CAAA,EAAG;EACb,oBACElB,OAAA,CAAAE,SAAA;IAAAiB,QAAA,eACEnB,OAAA,CAACV,aAAa;MAAA6B,QAAA,eACZnB,OAAA,CAACP,MAAM;QAAA0B,QAAA,gBACLnB,OAAA,CAACR,KAAK;UAAC4B,KAAK;UAACT,IAAI,EAAC,GAAG;UAACU,OAAO,eAAErB,OAAA,CAACZ,KAAK;YAAAkC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC5CzB,OAAA,CAACR,KAAK;UAAC4B,KAAK;UAACT,IAAI,EAAC,UAAU;UAACU,OAAO,eAAErB,OAAA,CAACX,OAAO;YAAAiC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACrDzB,OAAA,CAACR,KAAK;UAAC4B,KAAK;UAACT,IAAI,EAAC,WAAW;UAACU,OAAO,eAAErB,OAAA,CAACN,QAAQ;YAAA4B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI;EAAC,gBAChB,CAAC;AAEP;AAACC,EAAA,GAZQR,GAAG;AAcZ,eAAeA,GAAG;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}